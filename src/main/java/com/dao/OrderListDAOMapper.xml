<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.OrderListDAOMapper">

    <resultMap id="s" type="orderlist">
        <id column="onumbers" property="onumbers"/>
        <result column="omoney" property="omoney"/>
        <result column="ostatus" property="ostatus"/>
        <result column="ordertime" property="ordertime"/>
        <association property="user" javaType="user">
            <id column="uid" property="uid"/>
            <result column="uname" property="uname"/>
            <result column="upsw" property="upsw"/>
            <result column="uemail" property="uemail"/>
            <result column="uphoto" property="uphoto"/>
        </association>
        <association property="address" javaType="address">
            <id column="adid" property="adid"/>
            <result column="adname" property="adname"/>
            <result column="adphone" property="adphone"/>
            <result column="adress" property="adress"/>
        </association>
    </resultMap>

    <resultMap id="map" type="HashMap">
        <result property="number" column="number" javaType="java.lang.Integer"/>
        <result property="he" column="he" javaType="java.lang.Double"/>
    </resultMap>

    <select id="find" resultMap="map" parameterType="java.lang.Integer">
        select count(1) number, sum(omoney) he
        from orderlist
        where orderlist.uid = #{uid}
    </select>

    <select id="findBystate" resultType="java.lang.Integer">
        select count(1)
        from orderlist
        where ostatus = #{ostatus}
        and uid = #{uid}
    </select>

    <insert id="insertADD" parameterType="orderlist">
        insert into orderlist 
        (onumbers, ordertime, uid, omoney, ostatus) VALUE 
        (#{onumbers},#{ordertime},#{user.uid},#{omoney},#{ostatus})
    </insert>
    
    <select id="findByMore" resultMap="s" parameterType="orderlist">
        select orderlist.onumbers, orderlist.ordertime, orderlist.uid, orderlist.adid, orderlist.omoney, orderlist.ostatus, u.uid, u.uname, u.upsw, u.uemail, u.uphoto, u.adid, A.adid, A.adname, A.adphone, A.adress, A.uid
        from orderlist
        left outer join user u on u.uid = orderlist.uid
        left join Address A on orderlist.adid = A.adid
        <where>
            <if test="onumbers > 0">
               and orderlist.onumbers = #{onumbers}
            </if>
            <if test="user.uid > 0">
               and orderlist.uid = #{user.uid}
            </if>

        </where>

    </select>


    <select id="findByMore1" resultMap="s" parameterType="orderlist">
        select orderlist.onumbers, orderlist.ordertime, orderlist.uid, orderlist.adid, orderlist.omoney, orderlist.ostatus, u.uid, u.uname, u.upsw, u.uemail, u.uphoto, u.adid, A.adid, A.adname, A.adphone, A.adress, A.uid
        from orderlist
        left outer join user u on u.uid = orderlist.uid
        left join Address A on orderlist.adid = A.adid
        <where>
            <if test="onumbers > 0">
                and orderlist.onumbers like concat('%',#{onumbers},'%')
            </if>
            <if test="user.uid > 0">
                and orderlist.uid = #{user.uid}
            </if>

        </where>

    </select>

    <update id="updateMore" parameterType="orderlist">
        update orderlist
        <set>
            <if test="address.adid > 0">
               adid = #{address.adid},
            </if>
            <if test="ostatus != null and ostatus != ''">
               ostatus = #{ostatus},
            </if>
        </set>
        <where>
            <if test="onumbers > 0">
              and onumbers = #{onumbers}
            </if>
            <if test="user.uid > 0">
                and orderlist.uid = #{user.uid}
            </if>
        </where>

    </update>


</mapper>
